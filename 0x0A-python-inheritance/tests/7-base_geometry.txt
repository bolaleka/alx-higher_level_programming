#Doctest ../7-base_geometry.py

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("width", 1)
>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> bg.integer_validator("width", "goat")
Traceback (most recent call last):
TypeError: width must be an integer

>>> bg.integer_validator("width", {1,2})
Traceback (most recent call last):
TypeError: width must be an integer

>>> bg.integer_validator("width", None)
Traceback (most recent call last):
TypeError: width must be an integer

>>> bg.integer_validator("width", (1,20))
Traceback (most recent call last):
TypeError: width must be an integer

>>> bg.integer_validator("width", -1)
Traceback (most recent call last):
ValueError: width must be greater than 0

>>> bg.integer_validator("width", 0)
Traceback (most recent call last):
ValueError: width must be greater than 0

>>> bg.integer_validator([1, 2], 9)
>>> bg.integer_validator([1, 2], [9])
Traceback (most recent call last):
TypeError: [1, 2] must be an integer

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator('p')
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("width", True)
Traceback (most recent call last):
TypeError: width must be an integer
